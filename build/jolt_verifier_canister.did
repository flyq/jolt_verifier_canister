type Error = variant {
  Internal : text;
  NotAuthorized;
  CallError : text;
  StableError : text;
};
type InitData = record { owner : principal };
type Result = variant { Ok; Err : Error };
type Result_1 = variant { Ok : bool; Err : Error };
service : (InitData) -> {
  get_buffer : (nat32) -> (opt blob) query;
  get_owner : () -> (principal) query;
  preprocessing : () -> (Result);
  set_owner : (principal) -> (Result);
  update_proof : (blob) -> (Result);
  upload_preprocessing_buffer : (nat32, blob) -> (Result);
  verify_jolt_proof : () -> (Result_1);
}
